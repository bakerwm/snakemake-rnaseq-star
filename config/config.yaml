##############################################################################
# DESIGN
## build a design, mut-vs-wt pairs
## samples+units (samples=names; units=replicates)
# raw_fq_dir: fastq/raw_data
wt: 
  - dT0.1
  - dT1
mut: 
  - dT0.5
  - dT5
fq_dir: fastq/raw_data
strandness: reverse # optional: [yes, reverse, none]
# out_dir: results # default: ./results
##############################################################################

##############################################################################
# pre-build reference index (Salmon, STAR)
index:
  fasta: null
  gtf: null
  salmon_index: null
  star_index: null
##############################################################################

ref:
  # Ensembl release (make sure to take one where snpeff data is available, check 'snpEff databases' output)
  # Ensembl species name
  # species: homo_sapiens
  # release: 100
  # # Genome build
  # build: GRCh38  
  # ## Human
  # release: 100
  # species: homo_sapiens
  # build: GRCh38
  ## Fruitfly
  release: 100
  species: drosophila_melanogaster
  build: BDGP6.28
  # ## Mouse
  # release: 100
  # species: mus_musculus
  # build: GRCm38
## to-be deprecated, see design.yaml
##############################################################################
# See above config in design.yaml

## Generated by design.smk, according to DESIGN section: wt|mut|fq_dir
# path or URL to sample sheet (TSV format, columns: sample, condition, ...)
samples: results/design/samples.tsv
# path or URL to sequencing unit sheet (TSV format, columns: sample, unit, fq1, fq2)
# Units are technical replicates (e.g. lanes, or resequencing of the same biological
# sample).
units: results/design/units.tsv

trimming:
  # If you activate trimming by setting this to `True`, you will have to
  # specify the respective cutadapt adapter trimming flag for each unit
  # in the `units.tsv` file's `adapters` column
  activate: True

pca:
  activate: True
  # Per default, a separate PCA plot is generated for each of the
  # `variables_of_interest` and the `batch_effects`, coloring according to
  # that variables groups.
  # If you want PCA plots for further columns in the samples.tsv sheet, you
  # can request them under labels as a list, for example:
  # - relatively_uninteresting_variable_X
  # - possible_batch_effect_Y
  labels: ""

diffexp:
  # variables for whome you are interested in whether they have an effect on
  # expression levels
  variables_of_interest:
    treatment_1:
      # any fold change will be relative to this factor level
      base_level: B
    treatment_2:
      # any fold change will be relative to this factor level
      base_level: C
  # variables whose effect you want to model to separate them from your
  # variables_of_interest
  batch_effects:
    - jointly_handled
  # contrasts for the deseq2 results method to determine fold changes
  contrasts:
    A-vs-B_treatment_1:
      # must be one of the variables_of_interest, for details see:
      # https://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#contrasts
      variable_of_interest: treatment_1
      # must be a level present in the variable_of_interest that is not the
      # base_level specified above
      level_of_interest: A
  # The default model includes all interactions among variables_of_interest
  # and batch_effects added on. For the example above this implicitly is:
  # model: ~jointly_handled + treatment_1 * treatment_2
  # For the default model to be used, simply specify an empty `model: ""` below.
  # If you want to introduce different assumptions into your model, you can
  # specify a different model to use, for example skipping the interaction:
  # model: ~jointly_handled + treatment_1 + treatment_2
  model: ""


params:
  cutadapt-pe: ""
  cutadapt-se: ""
  star: ""
